<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker安装Gitlab</title>
      <link href="/li/d7564f52.html"/>
      <url>/li/d7564f52.html</url>
      
        <content type="html"><![CDATA[<h3 id="Docker安装Gitlab"><a href="#Docker安装Gitlab" class="headerlink" title="Docker安装Gitlab"></a>Docker安装Gitlab</h3><h4 id="1-下载映像"><a href="#1-下载映像" class="headerlink" title="1. 下载映像"></a>1. 下载映像</h4><ul><li>在套件中心安装Docker</li><li>打开Docker后点击<code>注册表</code>，搜索<code>gitlab</code>，在结果中双击<code>gitlab/gitlab-ce</code><br><img src="/medias/doc/docker/gitlab1.png" alt>  </li><li>下拉选择版本，可也默认<code>latest</code><br><img src="/medias/doc/docker/gitlab2.png" alt></li></ul><h4 id="2-创建容器"><a href="#2-创建容器" class="headerlink" title="2. 创建容器"></a>2. 创建容器</h4><ul><li><p>下载完成后点击<code>映像</code>，双击 <code>gitlab/gitlab-ce:latest</code>来创建一个容器。</p></li><li><p>容器名称可随意修改<br><img src="/medias/doc/docker/gitlab3.png" alt></p></li><li><p>点击<code>高级设置</code>进行配置。勾选<code>启动自动重新启动</code>，点击<code>卷</code>选项，点击<code>添加文件夹</code>，把容器中的 <code>/var/opt/gitlab</code>和<code>/etc/gitlab</code>映射出来.<br><img src="/medias/doc/docker/gitlab4.png" alt><br><img src="/medias/doc/docker/gitlab5.png" alt></p></li><li><p>再点击端口设置，为容器端口指定一个本地端口，也可全为自动，为方便记忆，建议手动设置。<br><img src="/medias/doc/docker/gitlab6.png" alt></p></li><li><p>点击应用即可完成</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装Jellyfin</title>
      <link href="/li/10861230.html"/>
      <url>/li/10861230.html</url>
      
        <content type="html"><![CDATA[<h3 id="Docker安装jellyfin"><a href="#Docker安装jellyfin" class="headerlink" title="Docker安装jellyfin"></a>Docker安装jellyfin</h3><h4 id="1-下载映像"><a href="#1-下载映像" class="headerlink" title="1.下载映像"></a>1.下载映像</h4><ul><li><p>在套件中心安装Docker</p></li><li><p>打开Docker后点击<code>注册表</code>，搜索<code>jellyfin</code>，在结果中双击<code>jellyfin/jellyfin</code><br><img src="/medias/doc/docker/jellyfin.png" alt>  </p></li><li><p>下拉选择版本，可也默认<code>latest</code>.<br><img src="/medias/doc/docker/latest.png" alt></p><h4 id="2-部署容器"><a href="#2-部署容器" class="headerlink" title="2.  部署容器"></a>2.  部署容器</h4><ul><li>在<code>映像</code>中双击<code>jellyfin/jellyfin:latest</code><br><img src="/medias/doc/docker/jellyfin1.png" alt></li></ul></li><li><p>设置容器名称，然后点击<code>高级设置</code>勾选<code>启动自动重新启动</code>，点<code>卷</code>添加文件夹，<code>文件/文件夹</code>为本地路径，<code>装载路径</code>为容器内部路径，可自行设置.<br><img src="/medias/doc/docker/jellyfin2.png" alt><br><img src="/medias/doc/docker/jellyfin3.png" alt></p></li><li><p>然后设置一下端口，默认就是8096，设置一样的即可.<br><img src="/medias/doc/docker/jellyfin4.png" alt></p></li><li><p>最后点击应用即可完成设置</p><h4 id="3-设置jellyfin"><a href="#3-设置jellyfin" class="headerlink" title="3.  设置jellyfin"></a>3.  设置jellyfin</h4></li><li><p>在浏览器中输入<code>群晖ip:8096</code>,就进入到了jellyfin设置页面，默认是英文，先设置成中文,设置账号密码。<br><img src="/medias/doc/docker/jellyfin5.png" alt><br><img src="/medias/doc/docker/jellyfin6.png" alt></p></li><li><p>这里是添加媒体库，暂时先不添加，直接点Next跳过，其它默认就行，完成设置.<br><img src="./medias/doc/docker/jellyfin7.png" alt><br><img src="/medias/doc/docker/jellyfin8.png" alt><br><img src="/medias/doc/docker/jellyfin9.png" alt></p></li><li><p>然后重新登陆就行<br><img src="/medias/doc/docker/jellyfin10.png" alt></p></li><li><p>进入到jellyf后台了，先设置一下媒体库<br><img src="/medias/doc/docker/jellyfin11.png" alt><br><img src="/medias/doc/docker/jellyfin12.png" alt></p></li><li><p>跟着设置就行了，最后完成.<br><img src="/medias/doc/docker/jellyfin13.png" alt></p><h4 id="4-转码设置"><a href="#4-转码设置" class="headerlink" title="4.  转码设置"></a>4.  转码设置</h4></li><li><p>首先查看设备是否支持硬件转码，在群晖<code>控制面板</code>中点击<code>终端机和SNMP</code>，开启<code>SSH</code>功能.<br><img src="/medias/doc/docker/jellyfin14.png" alt></p></li><li><p>使用<code>SSH</code>客户端连接后输入</p><pre><code>ls /dev/dri</code></pre></li><li><p>显示<code>renderD128</code>表示支持<br><img src="./medias/doc/docker/jellyfin15.png" alt></p></li><li><p>在jellyfin后台进行转码设置<br><img src="/medias/doc/docker/jellyfin16.png" alt></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jellyfin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装adguardhome</title>
      <link href="/li/b356b84d.html"/>
      <url>/li/b356b84d.html</url>
      
        <content type="html"><![CDATA[<h3 id="Docker安装adguardhome"><a href="#Docker安装adguardhome" class="headerlink" title="Docker安装adguardhome"></a>Docker安装adguardhome</h3><h4 id="1-下载映像"><a href="#1-下载映像" class="headerlink" title="1.下载映像"></a>1.下载映像</h4><ul><li><p>在套件中心安装Docker</p></li><li><p>打开Docker后点击<code>注册表</code>，搜索<code>adguardhome</code>，在结果中双击<code>adguard/adguardhome</code><br><img src="/medias/doc/docker/adguardhome.png" alt>  </p></li><li><p>下拉选择版本，可也默认<code>latest</code>.<br><img src="/medias/doc/docker/latest.png" alt></p><h4 id="2-部署容器"><a href="#2-部署容器" class="headerlink" title="2.部署容器"></a>2.部署容器</h4></li><li><p>在<code>映像</code>中双击<code>adguard/adguardhome:latest</code><br><img src="/medias/doc/docker/adguardhome1.png" alt></p></li><li><p>设置容器名称，然后点击<code>高级设置</code>勾选<code>启动自动重新启动</code>.<br><img src="/medias/doc/docker/adguardhome2.png" alt></p></li><li><p>点<code>卷</code>添加文件夹，<code>文件/文件夹</code>为本地路径，<code>装载路径</code>为容器内部路径.</p><pre class="line-numbers language-bash"><code class="language-bash">/opt/adguardhome/work/opt/adguardhome/config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/medias/doc/docker/adguardhome3.png" alt></p></li><li><p>点击<code>端口设置</code>,根据自己的情况改一下本地端口，注意不能与已经使用的端口有重复，否则端口冲突会造成adguardhome运行不正常，给容器<code>80</code>和<code>3000</code>设置一个本都端口，本地端口和容器<code>53/TCP，53/UDP</code>一样即可.<br><img src="/medias/doc/docker/adguardhome4.png" alt></p></li><li><p>设置无误后，点击应用.</p><h4 id="3-设置adguardhome"><a href="#3-设置adguardhome" class="headerlink" title="3.  设置adguardhome"></a>3.  设置adguardhome</h4></li><li><p>浏览器中输入群晖IP:容器<code>3000</code>对应端口,例如：10.0.0.6:32770<br><img src="/medias/doc/docker/adguardhome5.png" alt></p></li><li><p><code>网页关了界面</code>端口设置<code>3000</code>或者<code>80</code>，设置<code>80</code>需对应本地端口就行访问.<br><img src="/medias/doc/docker/adguardhome6.png" alt></p></li><li><p>设置账号账号密码，下一步，完成，重新登陆.<br><img src="/medias/doc/docker/adguardhome7.png" alt><br><img src="/medias/doc/docker/adguardhome8.png" alt></p></li><li><p>点击<code>设置</code>-<code>DNS设置</code>，设置<code>上游DNS服务器</code>,可根据不同地区进行添加.</p><pre class="line-numbers language-bash"><code class="language-bash">61.128.192.68119.29.29.29223.5.5.5tcp://8.8.8.8tcp://208.67.222.222tcp://1.1.1.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/doc/docker/adguardhome9.png" alt></p></li><li><p>点击<code>测试上游DNS</code>没有问题就点击<code>应用</code><br><img src="/medias/doc/docker/adguardhome10.png" alt></p></li><li><p>点击<code>过滤器</code>-<code>DNS封锁清单</code>-<code>添加阻止列表</code>，可在网上搜索，这里提供一些常见的.</p><details><summary>DNS封锁清单</summary><p><pre><code>AdGuard Simplified Domain Names filterhttps://adguardteam.github.io/AdGuardSDNSFilter/Filters/filter.txtEasyList Chinahttps://easylist-downloads.adblockplus.org/easylistchina.txtEasyList China + EasyListhttps://easylist-downloads.adblockplus.org/easylistchina+easylist.txtEasyList China + EasyList (修正)http://sub.adtchrome.com/adt-chinalist-easylist.txtEasyPrivacyhttps://easylist-downloads.adblockplus.org/easyprivacy.txtHalfLife 规则合并自 EasylistChina、EasylistLite、CJX’sAnnoyance 合并规则https://gitee.com/halflife/list/raw/master/ad.txtxinggsf 乘风广告过滤规则https://gitee.com/xinggsf/Adblock-Rule/raw/master/rule.txtxinggsf 视频过滤规则https://gitee.com/xinggsf/Adblock-Rule/raw/master/mv.txtCJX’s Annoyance List (去自推列表)https://gitee.com/cjx82630/cjxlist/raw/master/cjx-annoyance.txtCJX’s uBlock list (uBlock 规则)https://gitee.com/cjx82630/cjxlist/raw/master/cjx-ublock.txtI don’t care about cookieshttps://www.i-dont-care-about-cookies.eu/abp/AdAwayhttps://adaway.org/hosts.txtMalwareDomainList.com Hosts Listhttp://www.malwaredomainlist.com/hostslist/hosts.txtAdblock Warning Removal Listhttps://easylist-downloads.adblockplus.org/antiadblockfilters.txtFanboy&#39;s problematic-siteshttps://fanboy.co.nz/fanboy-problematic-sites.txtadbyby/xwhyc-ruleshttps://raw.githubusercontent.com/adbyby/xwhyc-rules/master/lazy.txtfull/hostshttps://hosts.nfz.moe/127.0.0.1/full/hosts容</code></pre></p></details></li><li><p>最后在电脑和路由器上配置DNS，填写群晖IP即可，路由器主备均天下群晖IP<br><img src="/medias/doc/docker/adguardhome12.png" alt> </p></li><li><p>查看效果<br><img src="/medias/doc/docker/adguardhome13.png" alt> </p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装</title>
      <link href="/li/a3201697.html"/>
      <url>/li/a3201697.html</url>
      
        <content type="html"><![CDATA[<p><strong>CentOS 7</strong></p><p>检查环境</p><ol><li><p>检查内核版本，返回的值大于3.10即可</p><pre><code>uname -r</code></pre><p>卸载</p><p>1.查询安装过的包</p><p>yum list installed | grep docker<br>docker-engine.x86_64                 17.03.0.ce-1.el7.centos         @dockerrepo</p><p>2.删除安装的软件包</p><p>yum -y remove docker-engine.x86_64</p></li></ol><pre><code>3.删除镜像/容器等rm -rf /var/lib/docker</code></pre><p>Centos7安装配置docker</p><ol start="2"><li><p>安装需要的软件包，yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</p><pre><code>  yum install -y yum-utils device-mapper-persistent-data lvm2</code></pre></li><li><p>设置yum源</p><pre><code>  yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</code></pre></li><li><p>可以查看所有仓库中所有docker版本，并选择特定版本安装</p><pre><code>    yum list docker-ce --showduplicates | sort -r</code></pre></li><li><p>安装docker<br>​            选择最新安装即可</p><pre><code>    yum install docker-ce-19.03.9-3.el7</code></pre></li><li><p>验证安装</p><pre><code> docker -v</code></pre></li><li><p>启动并加入开机启动</p><pre><code>       systemctl start docker       systemctl enable docker</code></pre></li></ol><hr><p><strong>CentOS 8</strong></p><p><a href="https://docs.docker.com/engine/install/centos/" target="blank">官方参考地址</a></p><p>安装依赖</p><pre class="line-numbers language-javascript"><code class="language-javascript">yum install <span class="token operator">-</span>y yum<span class="token operator">-</span>utils device<span class="token operator">-</span>mapper<span class="token operator">-</span>persistent<span class="token operator">-</span>data lvm2yum<span class="token operator">-</span>config<span class="token operator">-</span>manager <span class="token operator">--</span>add<span class="token operator">-</span>repo  https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>download<span class="token punctuation">.</span>docker<span class="token punctuation">.</span>com<span class="token operator">/</span>linux<span class="token operator">/</span>centos<span class="token operator">/</span>docker<span class="token operator">-</span>ce<span class="token punctuation">.</span>repoyum install docker<span class="token operator">-</span>ce docker<span class="token operator">-</span>ce<span class="token operator">-</span>cli containerd<span class="token punctuation">.</span>io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果报错：Problem: package docker-ce-3:19.03.4-3.el7.x86_64 requires containerd.io &gt;= 1.2.2-3 那就先装新版的 containerd.io</p><p>安装新版本containerd.io</p><pre class="line-numbers language-javascript"><code class="language-javascript">rpm <span class="token operator">-</span>i 包名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再装剩下两个</p><pre><code>yum install docker-ce docker-ce-cli</code></pre><p>启动docker</p><pre><code>systemctl start docker</code></pre><p>查看版本</p><pre><code>docker --version</code></pre><p>开机自启</p><pre><code>systemctl enable docker</code></pre><hr><p><strong>Debian</strong><br>环境</p><ol><li>卸载旧版本<br>旧版本的 Docker 称为 docker 或者 docker-engine，使用以下命令卸载旧版本<pre><code>  apt-get remove docker docker-engine docker.io</code></pre></li><li>Debian 7 的内核默认为 3.2，为了满足 Docker CE 的需求，应该安装 backports 的内核<br>2.1    Debian 7 Wheezy 使用以下命令<pre><code>  sudo apt-get update sudo apt-get install apt-transport-https ca-certificates curl lsb-release python-software-properties</code></pre>2.2    Debian 8 Jessie 或者 Debian 9 Stretch 使用以下命令<pre><code>  apt-get update &amp; apt-get install apt-transport-https ca-certificates curl gnupg2 lsb-release software-properties-common</code></pre></li></ol><p>安装 </p><ol><li><p>国内源<br>1.1    为了确认所下载软件包的合法性，需要添加软件源的 GPG 密钥。</p><pre><code>  curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/debian/gpg | apt-key add -</code></pre><p>1.2    然后，我们需要向 source.list 中添加 Docker CE 软件源：</p><pre><code>  add-apt-repository &quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/debian $(lsb_release -cs) stable&quot;</code></pre><p>  以上命令会添加稳定版本的 Docker CE APT 镜像源，如果需要最新版本的 Docker CE 请将 stable 改为 edge 或者 test。从 Docker 17.06 开始，edge test 版本的 APT 镜像源也会包含稳定版本的 Docker CE。</p></li><li><p>官方源</p><pre><code>  curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -   add-apt-repository \  &quot;deb [arch=amd64] https://download.docker.com/linux/debian  $(lsb_release -cs) \  stable&quot;</code></pre></li><li><p>Debian 7 需要进行额外的操作<br>3.1    编辑 /etc/apt/sources.list 将 deb-src 一行删除或者使用 # 注释</p><pre><code>  deb-src [arch=amd64] https://download.docker.com/linux/debian wheezy stable</code></pre></li><li><p>安装 Docker CE<br>4.1    更新 apt 软件包缓存，并安装 docker-ce</p><pre><code>  apt-get update   apt-get install docker-ce</code></pre><p>4.2    验证Docker</p><pre><code>  docker -v</code></pre></li><li><p>显示Debian发行版的名称</p><pre><code>  lsb_release -cs</code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux设置静态IP</title>
      <link href="/li/7c4cab82.html"/>
      <url>/li/7c4cab82.html</url>
      
        <content type="html"><![CDATA[<p><strong>ArchLinux</strong></p><p>​    1.编辑配置文件</p><p>​            网卡</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">/</span>etc<span class="token operator">/</span>dhcpcd<span class="token punctuation">.</span>conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    2.添加下列内容</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">interface</span> <span class="token class-name">eth0</span>                        #设置网卡名<span class="token keyword">static</span> ip_address<span class="token operator">=</span><span class="token number">10.0</span><span class="token punctuation">.</span><span class="token number">0.10</span><span class="token operator">/</span><span class="token number">24</span>                #设置IP和掩码位<span class="token keyword">static</span> routers<span class="token operator">=</span><span class="token number">10.0</span><span class="token punctuation">.</span><span class="token number">0.1</span>                    #设置网关<span class="token keyword">static</span> domain_name_servers<span class="token operator">=</span><span class="token number">10.0</span><span class="token punctuation">.</span><span class="token number">0.1</span>            #设置DNS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>​    3.常用命令</p><pre class="line-numbers language-javascript"><code class="language-javascript">systemctl status systemd<span class="token operator">-</span>networkd            #查看网络状态systemctl restart dhcpcd                #重启DHCP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><p><strong>CentOS</strong></p><p>​    1.编辑配置文件</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">/</span>etc<span class="token operator">/</span>sysconfig<span class="token operator">/</span>network<span class="token operator">-</span>scripts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    2.清空内容并添加以下内容</p><pre class="line-numbers language-javascript"><code class="language-javascript">TYPE<span class="token operator">=</span><span class="token string">"Ethernet"</span>PROXY_METHOD<span class="token operator">=</span><span class="token string">"none"</span>BROWSER_ONLY<span class="token operator">=</span><span class="token string">"no"</span>BOOTPROTO<span class="token operator">=</span><span class="token string">"none"</span>DEFROUTE<span class="token operator">=</span><span class="token string">"yes"</span>IPV4_FAILURE_FATAL<span class="token operator">=</span><span class="token string">"no"</span>IPV6INIT<span class="token operator">=</span><span class="token string">"yes"</span>IPV6_AUTOCONF<span class="token operator">=</span><span class="token string">"yes"</span>IPV6_DEFROUTE<span class="token operator">=</span><span class="token string">"yes"</span>IPV6_FAILURE_FATAL<span class="token operator">=</span><span class="token string">"no"</span>IPV6_ADDR_GEN_MODE<span class="token operator">=</span><span class="token string">"stable-privacy"</span>NAME<span class="token operator">=</span><span class="token string">"eth0"</span>                                        #网卡名称UUID<span class="token operator">=</span><span class="token string">"5ee00e18-1161-4c0b-b874-1931dbd7ea33"</span>        #IDDEVICE<span class="token operator">=</span><span class="token string">"eth0"</span>ONBOOT<span class="token operator">=</span><span class="token string">"yes"</span>IPADDR<span class="token operator">=</span><span class="token string">"10.0.0.132"</span>                                #静态IP地址PREFIX<span class="token operator">=</span><span class="token string">"28"</span>                                        #掩码位GATEWAY<span class="token operator">=</span><span class="token string">"10.0.0.128"</span>                            #子网掩码DNS1<span class="token operator">=</span><span class="token string">"10.0.0.128"</span>                                #DNS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><strong>Debian</strong></p><p>​    1.编辑配置文件</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">/</span>etc<span class="token operator">/</span>network<span class="token operator">/</span>interfaces<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    2.清空内容并添加以下内容</p><pre class="line-numbers language-javascript"><code class="language-javascript">auto eth0                        #设置网卡名iface eth0 inet <span class="token keyword">static</span>                 address <span class="token number">10.0</span><span class="token punctuation">.</span><span class="token number">0.9</span>                    #设置IP和掩码位netmask <span class="token number">255.255</span><span class="token punctuation">.</span><span class="token number">255.0</span>                     #设置子网掩码gateway <span class="token number">10.0</span><span class="token punctuation">.</span><span class="token number">0.1</span>                    #设置网关<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><strong>Ubuntu</strong></p><p>​    1.编辑配置文件</p><pre class="line-numbers language-javas"><code class="language-javas">/etc/netplan/********.yaml                #*填写对应的名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    2.修改内容为如下,本设置为双网卡</p><pre class="line-numbers language-javas"><code class="language-javas">network:    ethernets:        eth0:                        #网卡名称            dhcp4: false                                        addresses: [10.0.0.11/24]            #IP和掩码位            routes:                   - to: 0.0.0.0/0                     via: 10.0.0.1                                         metric: 30                #优先级            optional: true            nameservers:　　　　    addresses: [10.0.0.1,119.29.29.29]        #DNS        eth1:            dhcp4: false            addresses: [10.0.0.131/28]            routes:                    - to: 0.0.0.0/0                      via: 10.0.0.128                      metric: 20            optional: true            nameservers:　　　　    addresses: [10.0.0.128]    version: 2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    3.重启网卡并</p><pre class="line-numbers language-javas"><code class="language-javas">netplan apply<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim编辑器</title>
      <link href="/li/73bed3ab.html"/>
      <url>/li/73bed3ab.html</url>
      
        <content type="html"><![CDATA[<h2 id="Vi编辑器"><a href="#Vi编辑器" class="headerlink" title="Vi编辑器"></a>Vi编辑器</h2><ol><li><p><strong><em>Vi的基本概念</em></strong><br>基本上vi可以分为三种状态，分别是命令模式（command mode）、插入模式（Insert mode）和底行模式（last line mode），各模式的功能区分如下:</p><ol><li>命令行模式command mode）<br>控制屏幕光标的移动，字符、字或行的删除，移动复制某区段及进入Insert mode下，或者到 last line mode。<ol start="2"><li>插入模式（Insert mode）<br>只有在Insert mode下，才可以做文字输入，按「ESC」键可回到命令行模式。</li><li>底行模式（last line mode）  　　<br>将文件保存或退出vi，也可以设置编辑环境，如寻找字符串、列出行号……等。  不过一般我们在使用时把vi简化成两个模式，就是将底行模式（last line mode）也算入命令行模式command mode）。</li></ol></li></ol></li></ol><ol start="2"><li><p><strong><em>Vi的基本操作</em></strong></p><ol><li><p>切换至插入模式（Insert mode）编辑文件  　　<br> 在「命令行模式（command mode）」下按一下字母「i」就可以进入「插入模式（Insert mode）」，这时候你就可以开始输入文字了。  </p></li><li><p>Insert 的切换  　　</p><p> 您目前处于「插入模式（Insert mode）」，您就只能一直输入文字，如果您发现输错了字！想用光标键往回移动，将该字删除，就要先按一下「ESC」键转到「命令行模式（command mode）」再删除文字。  </p></li><li><p>退出vi及保存文件  　　</p><p> 在「命令行模式（command mode）」下，按一下「：」冒号键进入「Last line mode」，例如：  : w filename （输入 「w filename」将文章以指定的文件名filename保存）  : wq (输入「wq」，存盘并退出vi)  : q! (输入q!， 不存盘强制退出vi)</p></li></ol></li></ol><pre><code>​    </code></pre><ol start="3"><li><p><strong><em>命令行模式（command mode）功能键</em></strong></p><ol><li><p>插入模式  　　<br> 按「i」切换进入插入模式「insert mode」，按“i”进入插入模式后是从光标当前位置开始输入文件；　　<br> 按「a」进入插入模式后，是从目前光标所在位置的下一个位置开始输入文字；  　　<br> 按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。  </p></li><li><p>从插入模式切换为命令行模式  　　</p><p> 按「ESC」键。  </p></li><li><p>移动光标  　　</p><p> vi可以直接用键盘上的光标来上下左右移动，但正规的vi是用小写英文字母「h」「j」「k」「l」,分别控制光标左、下、上、右移一格。  　　<br> 按「ctrl」+「b」：屏幕往“后”移动一页。  　　<br> 按「ctrl」+「f」：屏幕往“前”移动一页。  　　<br> 按「ctrl」+「u」：屏幕往“后”移动半页。  　　<br> 按「ctrl」+「d」：屏幕往“前”移动半页。  　　<br> 按数字「0」：移到文章的开头。  　　<br> 按「G」：移动到文章的最后。  　　<br> 按「$」：移动到光标所在行的“行尾”。  　　<br> 按「^」：移动到光标所在行的“行首”  　　<br> 按「w」：光标跳到下个字的开头  　　<br> 按「e」：光标跳到下个字的字尾  　　<br> 按「b」：光标回到上个字的开头  　　<br> 按「#l」：光标移到该行的第#个位置，如：5l,56l。  </p></li><li><p>删除文字  　　</p><p>  按「x」：每按一次，删除光标所在位置的“后面”一个字符。  　　<br>  按「#x」：例如，「6x」表示删除光标所在位置的“后面”6个字符。  　<br>  按「X」：大写的X，每按一次，删除光标所在位置的“前面”一个字符。  　　<br>  按 「#X」：例如，「20X」表示删除光标所在位置的“前面”20个字符。  　　<br>  按「dd」：删除光标所在行。  　　<br>  按「#dd」：从光标所在行开始删除#行  </p></li><li><p>复制</p><p> 复制全部：esc后ggyG<br> 按「yw」：将光标所在之处到字尾的字符复制到缓冲区中。<br> 按「#yw」：复制#个字到缓冲区  　　<br> 按「yy」：复制光标所在行到缓冲区。  　　<br> 按「#yy」：例如，「6yy」表示拷贝从光标所在的该行“往下数”6行文字。  　　<br> 按「p」：将缓冲区内的字符贴到光标所在位置。注意：所有与“y”有关的复制命令都必须与“p”配合才能完成复制与粘贴功能。  </p></li><li><p>替换  　　</p><p> 按「r」：替换光标所在处的字符。  　<br> 按「R」：替换光标所到之处的字符，直到按下「ESC」键为止。  </p></li><li><p>回复上一次操作  　　</p><p> 按「u」：如果您误执行一个命令，可以马上按下「u」，回到上一个操作。按多次“u”可以执行多次回复。  </p></li><li><p>更改  　　</p><p> 按「cw」：更改光标所在处的字到字尾处  　<br> 按「c#w」：例如，「c3w」表示更改3个字  </p></li><li><p>跳至指定的行  　　<br> 按「ctrl」+「g」列出光标所在行的行号。  　　<br> 按「#G」：例如，「15G」，表示移动光标至文章的第15行行首。</p></li></ol></li></ol><ol start="4"><li><p><strong><em>Last line mode下命令简介</em></strong></p><p> 在使用「last line mode」之前，请记住先按「ESC」键确定您已经处于「command mode」下后，再按「：」冒号即可进入「last line mode」。 </p><ol><li><p>列出行号  　<br>  按「set nu」：输入「set nu」后，会在文件中的每一行前面列出行号。  </p><ol start="2"><li><p>跳到文件中的某一行  　</p><p>按「#」：「#」号表示一个数字，在冒号后输入一个数字，再按回车键就会跳到该行了，如输入数字15，再回车，就会跳到文章的第15行。  </p></li><li><p>查找字符  　</p><p>按「/关键字」：先按「/」键，再输入您想寻找的字符，如果第一次找的关键字不是您想要的，可以一直按「n」会往后寻找到您要的关键字为止。  　<br>按「?关键字」：先按「?」键，再输入您想寻找的字符，如果第一次找的关键字不是您想要的，可以一直按「n」会往前寻找到您要的关键字为止。  </p></li><li><p>保存文件  　</p><p>按「w」：在冒号输入字母「w」就可以将文件保存起来。  </p></li><li><p>离开vi  　</p><p>按「q」：按「q」就是退出，如果无法离开vi，可以在「q」后跟一个「!」强制离开vi。  　<br>按「qw」：一般建议离开时，搭配「w」一起使用，这样在退出的时候还可以保存文件。</p></li></ol></li></ol></li></ol><hr><p><strong><em>Vi命令列表</em></strong></p><ol><li><p>移动光标类命令 </p><p> h :光标左移一个字符<br> l :光标右移一个字符<br> space：光标右移一个字符<br> Backspace：光标左移一个字符<br> k或Ctrl+p：光标上移一行<br> j或Ctrl+n ：光标下移一行<br> Enter ：光标下移一行<br> w或W ：光标右移一个字至字首<br> b或B ：光标左移一个字至字首<br> e或E ：光标右移一个字j至字尾<br> ) ：光标移至句尾<br> ( ：光标移至句首<br> }：光标移至段落开头<br> {：光标移至段落结尾<br> nG：光标移至第n行首<br> n+：光标下移n行<br> n-：光标上移n行<br> n$：光标移至第n行尾<br> H ：光标移至屏幕顶行<br> M ：光标移至屏幕中间行<br> L ：光标移至屏幕最后行<br> 0：（注意是数字零）光标移至当前行首<br> $：光标移至当前行尾</p></li><li><p>屏幕翻滚类命令  </p><p> Ctrl+u：向文件首翻半屏<br> Ctrl+d：向文件尾翻半屏<br> Ctrl+f：向文件尾翻一屏<br> Ctrl＋b；向文件首翻一屏<br> nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。</p></li><li><p>插入文本类命令  </p><p> i ：在光标前<br> I ：在当前行首<br> a：光标后<br> A：在当前行尾<br> o：在当前行之下新开一行<br> O：在当前行之上新开一行<br> r：替换当前字符<br> R：替换当前字符及其后的字符，直至按ESC键<br> s：从当前光标位置处开始，以输入的文本替代指定数目的字符<br> S：删除指定数目的行，并以所输入文本代替之<br> ncw或nCW：修改指定数目的字<br> nCC：修改指定数目的行</p></li><li><p>删除命令  </p><p> ndw或ndW：删除光标处开始及其后的n-1个字<br> do：删至行首<br> d$：删至行尾<br> ndd：删除当前行及其后n-1行<br> x或X：删除一个字符，x删除光标后的，而X删除光标前的<br> Ctrl+u：删除输入方式下所输入的文本</p></li><li><p>搜索及替换命令<br>/pattern：从光标开始处向文件尾搜索pattern<br>?pattern：从光标开始处向文件首搜索pattern<br>n：在同一方向重复上一次搜索命令<br>N：在反方向上重复上一次搜索命令<br>：s/p1/p2/g：将当前行中所有p1均用p2替代<br>：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代<br>：g/p1/s//p2/g：将文件中所有p1均用p2替换</p></li><li><p>选项设置  </p><p> all：列出所有选项设置情况<br> term：设置终端类型<br> ignorance：在搜索中忽略大小写<br> list：显示制表位(Ctrl+I)和行尾标志（$)<br> number：显示行号<br> report：显示由面向行的命令修改过的数目<br> terse：显示简短的警告信息<br> warn：在转到别的文件时若没保存当前文件则显示NO write信息<br> nomagic：允许在搜索模式中，使用前面不带“\”的特殊字符<br> nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始<br> mesg：允许vi显示其他用户用write写到自己终端上的信息</p></li><li><p>最后行方式命令  </p><p> ：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下<br> ：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下<br> ：n1,n2 d ：将n1行到n2行之间的内容删除<br> ：w ：保存当前文件<br> ：e filename：打开文件filename进行编辑<br> ：x：保存当前文件并退出<br> ：q：退出vi<br> ：q!：不保存文件并退出vi<br> ：!command：执行shell命令command<br> ：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指  定n1，n2，则表示将整个文件内容作为command的输入<br> ：r!command：将命令command的输出结果放到当前行 。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux源</title>
      <link href="/li/eb33f17f.html"/>
      <url>/li/eb33f17f.html</url>
      
        <content type="html"><![CDATA[<details><summary>CentOS</summary><pre><code># 腾讯# The mirror system uses the connecting IP address of the client and the# update status of each mirror to pick mirrors that are updated to and# geographically close to the client.  You should use this for CentOS updates# unless you are manually picking other mirrors.# If the mirrorlist= does not work for you, as a fall back you can try the# remarked out baseurl= line instead.&nbsp;[os]name=Qcloud centos os - $basearchbaseurl=http://mirrors.cloud.tencent.com/centos/$releasever/os/$basearch/enabled=1gpgcheck=1gpgkey=http://mirrors.cloud.tencent.com/centos/RPM-GPG-KEY-CentOS-7&nbsp;[updates]name=Qcloud centos updates - $basearchbaseurl=http://mirrors.cloud.tencent.com/centos/$releasever/updates/$basearch/enabled=1gpgcheck=1gpgkey=http://mirrors.cloud.tencent.com/centos/RPM-GPG-KEY-CentOS-7&nbsp;[centosplus]name=Qcloud centosplus - $basearchbaseurl=http://mirrors.cloud.tencent.com/centos/$releasever/centosplus/$basearch/enabled=0gpgcheck=1gpgkey=http://mirrors.cloud.tencent.com/centos/RPM-GPG-KEY-CentOS-7&nbsp;[cloud]name=Qcloud centos contrib - $basearchbaseurl=http://mirrors.cloud.tencent.com/centos/$releasever/cloud/$basearch/openstack-kilo/enabled=0gpgcheck=1gpgkey=http://mirrors.cloud.tencent.com/centos/RPM-GPG-KEY-CentOS-7&nbsp;[cr]name=Qcloud centos cr - $basearchbaseurl=http://mirrors.cloud.tencent.com/centos/$releasever/cr/$basearch/enabled=0gpgcheck=1gpgkey=http://mirrors.cloud.tencent.com/centos/RPM-GPG-KEY-CentOS-7&nbsp;[extras]name=Qcloud centos extras - $basearchbaseurl=http://mirrors.cloud.tencent.com/centos/$releasever/extras/$basearch/enabled=1gpgcheck=1gpgkey=http://mirrors.cloud.tencent.com/centos/RPM-GPG-KEY-CentOS-7&nbsp;[fasttrack]name=Qcloud centos fasttrack - $basearchbaseurl=http://mirrors.cloud.tencent.com/centos/$releasever/fasttrack/$basearch/enabled=0gpgcheck=1gpgkey=http://mirrors.cloud.tencent.com/centos/RPM-GPG-KEY-CentOS-7&nbsp;&nbsp;# 阿里云# The mirror system uses the connecting IP address of the client and the# update status of each mirror to pick mirrors that are updated to and# geographically close to the client.  You should use this for CentOS updates# unless you are manually picking other mirrors.# If the mirrorlist= does not work for you, as a fall back you can try the# remarked out baseurl= line instead.&nbsp;[base]name=CentOS-$releasever - Base - mirrors.aliyun.comfailovermethod=prioritybaseurl=http://mirrors.aliyun.com/centos/$releasever/os/$basearch/http://mirrors.aliyuncs.com/centos/$releasever/os/$basearch/http://mirrors.cloud.aliyuncs.com/centos/$releasever/os/$basearch/gpgcheck=1gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7&nbsp;#released updates[updates]name=CentOS-$releasever - Updates - mirrors.aliyun.comfailovermethod=prioritybaseurl=http://mirrors.aliyun.com/centos/$releasever/updates/$basearch/http://mirrors.aliyuncs.com/centos/$releasever/updates/$basearch/http://mirrors.cloud.aliyuncs.com/centos/$releasever/updates/$basearch/gpgcheck=1gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7&nbsp;#additional packages that may be useful[extras]name=CentOS-$releasever - Extras - mirrors.aliyun.comfailovermethod=prioritybaseurl=http://mirrors.aliyun.com/centos/$releasever/extras/$basearch/http://mirrors.aliyuncs.com/centos/$releasever/extras/$basearch/http://mirrors.cloud.aliyuncs.com/centos/$releasever/extras/$basearch/gpgcheck=1gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7&nbsp;#additional packages that extend functionality of existing packages[centosplus]name=CentOS-$releasever - Plus - mirrors.aliyun.comfailovermethod=prioritybaseurl=http://mirrors.aliyun.com/centos/$releasever/centosplus/$basearch/http://mirrors.aliyuncs.com/centos/$releasever/centosplus/$basearch/http://mirrors.cloud.aliyuncs.com/centos/$releasever/centosplus/$basearch/gpgcheck=1enabled=0gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7&nbsp;#contrib - packages by Centos Users[contrib]name=CentOS-$releasever - Contrib - mirrors.aliyun.comfailovermethod=prioritybaseurl=http://mirrors.aliyun.com/centos/$releasever/contrib/$basearch/http://mirrors.aliyuncs.com/centos/$releasever/contrib/$basearch/http://mirrors.cloud.aliyuncs.com/centos/$releasever/contrib/$basearch/gpgcheck=1enabled=0gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7&nbsp;&nbsp;# 中科大# The mirror system uses the connecting IP address of the client and the# update status of each mirror to pick mirrors that are updated to and# geographically close to the client.  You should use this for CentOS updates# unless you are manually picking other mirrors.# If the mirrorlist= does not work for you, as a fall back you can try the# remarked out baseurl= line instead.&nbsp;[base]name=CentOS-$releasever - Base#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=os&infra=$infrabaseurl=https://mirrors.ustc.edu.cn/centos/$releasever/os/$basearch/gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7&nbsp;#released updates[updates]name=CentOS-$releasever - Updates#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=updates&infra=$infrabaseurl=https://mirrors.ustc.edu.cn/centos/$releasever/updates/$basearch/gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7&nbsp;#additional packages that may be useful[extras]name=CentOS-$releasever - Extras#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=extras&infra=$infrabaseurl=https://mirrors.ustc.edu.cn/centos/$releasever/extras/$basearch/gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7&nbsp;#additional packages that extend functionality of existing packages[centosplus]name=CentOS-$releasever - Plus#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=centosplus&infra=$infrabaseurl=https://mirrors.ustc.edu.cn/centos/$releasever/centosplus/$basearch/gpgcheck=1enabled=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7&nbsp;&nbsp;# 清华源# The mirror system uses the connecting IP address of the client and the# update status of each mirror to pick mirrors that are updated to and# geographically close to the client.  You should use this for CentOS updates# unless you are manually picking other mirrors.# If the mirrorlist= does not work for you, as a fall back you can try the# remarked out baseurl= line instead.&nbsp;[base]name=CentOS-$releasever - Basebaseurl=https://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/os/$basearch/#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=osenabled=1gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-7&nbsp;#released updates[updates]name=CentOS-$releasever - Updatesbaseurl=https://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/updates/$basearch/#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=updatesenabled=1gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-7&nbsp;#additional packages that may be useful[extras]name=CentOS-$releasever - Extrasbaseurl=https://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/extras/$basearch/#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=extrasenabled=1gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-7&nbsp;#additional packages that extend functionality of existing packages[centosplus]name=CentOS-$releasever - Plusbaseurl=https://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/centosplus/$basearch/#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=centosplusgpgcheck=1enabled=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-7<p></p></code></pre><p></p></details><details><summary>Debian 10</summary><pre><code># 华为云镜像站    deb https://mirrors.huaweicloud.com/debian/ buster main contrib non-free    deb https://mirrors.huaweicloud.com/debian/ buster-updates main contrib non-free    deb https://mirrors.huaweicloud.com/debian/ buster-backports main contrib non-free    deb https://mirrors.huaweicloud.com/debian-security/ buster/updates main contrib non-free    deb-src https://mirrors.huaweicloud.com/debian/ buster main contrib non-free    deb-src https://mirrors.huaweicloud.com/debian/ buster-updates main contrib non-free    deb-src https://mirrors.huaweicloud.com/debian/ buster-backports main contrib non-free&nbsp;# 中科大镜像站    deb https://mirrors.ustc.edu.cn/debian/ buster main contrib non-free    deb https://mirrors.ustc.edu.cn/debian/ buster-updates main contrib non-free    deb https://mirrors.ustc.edu.cn/debian/ buster-backports main contrib non-free    deb https://mirrors.ustc.edu.cn/debian-security/ buster/updates main contrib non-free    deb-src https://mirrors.ustc.edu.cn/debian/ buster main contrib non-free    deb-src https://mirrors.ustc.edu.cn/debian/ buster-updates main contrib non-free    deb-src https://mirrors.ustc.edu.cn/debian/ buster-backports main contrib non-free    deb-src https://mirrors.ustc.edu.cn/debian-security/ buster/updates main contrib non-free&nbsp;# 腾讯云镜像站    deb http://mirrors.cloud.tencent.com/debian/ buster main non-free contrib    deb http://mirrors.cloud.tencent.com/debian-security buster/updates main    deb http://mirrors.cloud.tencent.com/debian/ buster-updates main non-free contrib    deb http://mirrors.cloud.tencent.com/debian/ buster-backports main non-free contrib    deb-src http://mirrors.cloud.tencent.com/debian-security buster/updates main    deb-src http://mirrors.cloud.tencent.com/debian/ buster main non-free contrib    deb-src http://mirrors.cloud.tencent.com/debian/ buster-updates main non-free contrib    deb-src http://mirrors.cloud.tencent.com/debian/ buster-backports main non-free contrib&nbsp;# 清华大学镜像站    deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free    deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free    deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free    deb https://mirrors.tuna.tsinghua.edu.cn/debian-security/ buster/updates main contrib non-free    deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free    deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free    deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free    deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security/ buster/updates main contrib non-free&nbsp;# 阿里云镜像站    deb http://mirrors.aliyun.com/debian/ buster main non-free contrib    deb http://mirrors.aliyun.com/debian-security buster/updates main    deb http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib    deb http://mirrors.aliyun.com/debian/ buster-backports main non-free contrib    deb-src http://mirrors.aliyun.com/debian-security buster/updates main    deb-src http://mirrors.aliyun.com/debian/ buster main non-free contrib    deb-src http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib    deb-src http://mirrors.aliyun.com/debian/ buster-backports main non-free contrib</code></pre></details><details><summary>Ubuntu</summary><pre><code># USTCdeb https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiversedeb https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiversedeb https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiversedeb https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse&nbsp;# 阿里云deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse&nbsp;# 腾讯deb http://mirrors.cloud.tencent.com/ubuntu/ focal main restricted universe multiversedeb http://mirrors.cloud.tencent.com/ubuntu/ focal-security main restricted universe multiversedeb http://mirrors.cloud.tencent.com/ubuntu/ focal-updates main restricted universe multiverse# deb http://mirrors.cloud.tencent.com/ubuntu/ focal-proposed main restricted universe multiverse# deb http://mirrors.cloud.tencent.com/ubuntu/ focal-backports main restricted universe multiversedeb-src http://mirrors.cloud.tencent.com/ubuntu/ focal main restricted universe multiversedeb-src http://mirrors.cloud.tencent.com/ubuntu/ focal-security main restricted universe multiversedeb-src http://mirrors.cloud.tencent.com/ubuntu/ focal-updates main restricted universe multiverse# deb-src http://mirrors.cloud.tencent.com/ubuntu/ focal-proposed main restricted universe multiverse# deb-src http://mirrors.cloud.tencent.com/ubuntu/ focal-backports main restricted universe multiverse&nbsp;# 清华# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse&nbsp;# 网易163deb http://mirrors.163.com/ubuntu/ focal main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ focal main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse&nbsp;# Ubuntu 官方源 deb http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiversedeb http://archive.ubuntu.com/ubuntu/ focal-security main restricted universe multiversedeb http://archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiversedeb http://archive.ubuntu.com/ubuntu/ focal-proposed main restricted universe multiversedeb http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiversedeb-src http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiversedeb-src http://archive.ubuntu.com/ubuntu/ focal-security main restricted universe multiversedeb-src http://archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiversedeb-src http://archive.ubuntu.com/ubuntu/ focal-proposed main restricted universe multiversedeb-src http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse<p></p></code></pre><p></p></details>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 源 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
